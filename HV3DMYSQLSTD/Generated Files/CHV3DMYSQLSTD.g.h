// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.200729.8

#pragma once
#include "winrt/HV3DMYSQLSTD.h"
namespace winrt::HV3DMYSQLSTD::implementation
{
    template <typename D, typename... I>
    struct __declspec(empty_bases) CHV3DMYSQLSTD_base : implements<D, HV3DMYSQLSTD::CHV3DMYSQLSTD, I...>
    {
        using base_type = CHV3DMYSQLSTD_base;
        using class_type = HV3DMYSQLSTD::CHV3DMYSQLSTD;
        using implements_type = typename CHV3DMYSQLSTD_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"HV3DMYSQLSTD.CHV3DMYSQLSTD";
        }
    };
}
namespace winrt::HV3DMYSQLSTD::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct __declspec(empty_bases) CHV3DMYSQLSTDT : implements<D, Windows::Foundation::IActivationFactory, I...>
    {
        using instance_type = HV3DMYSQLSTD::CHV3DMYSQLSTD;

        hstring GetRuntimeClassName() const
        {
            return L"HV3DMYSQLSTD.CHV3DMYSQLSTD";
        }
        auto ActivateInstance() const
        {
            return make<T>();
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_CHV3DMYSQLSTD_XAML_G_H) || __has_include("CHV3DMYSQLSTD.xaml.g.h")
#include "CHV3DMYSQLSTD.xaml.g.h"
#else

namespace winrt::HV3DMYSQLSTD::implementation
{
    template <typename D, typename... I>
    using CHV3DMYSQLSTDT = CHV3DMYSQLSTD_base<D, I...>;
}

#endif
