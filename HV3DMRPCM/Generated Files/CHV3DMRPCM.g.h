// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.200729.8

#pragma once
#include "winrt/HV3DMRPCM.h"
namespace winrt::HV3DMRPCM::implementation
{
    template <typename D, typename... I>
    struct __declspec(empty_bases) CHV3DMRPCM_base : implements<D, HV3DMRPCM::CHV3DMRPCM, I...>
    {
        using base_type = CHV3DMRPCM_base;
        using class_type = HV3DMRPCM::CHV3DMRPCM;
        using implements_type = typename CHV3DMRPCM_base::implements_type;
        using implements_type::implements_type;
        
        hstring GetRuntimeClassName() const
        {
            return L"HV3DMRPCM.CHV3DMRPCM";
        }
    };
}
namespace winrt::HV3DMRPCM::factory_implementation
{
    template <typename D, typename T, typename... I>
    struct __declspec(empty_bases) CHV3DMRPCMT : implements<D, Windows::Foundation::IActivationFactory, I...>
    {
        using instance_type = HV3DMRPCM::CHV3DMRPCM;

        hstring GetRuntimeClassName() const
        {
            return L"HV3DMRPCM.CHV3DMRPCM";
        }
        auto ActivateInstance() const
        {
            return make<T>();
        }
    };
}

#if defined(WINRT_FORCE_INCLUDE_CHV3DMRPCM_XAML_G_H) || __has_include("CHV3DMRPCM.xaml.g.h")
#include "CHV3DMRPCM.xaml.g.h"
#else

namespace winrt::HV3DMRPCM::implementation
{
    template <typename D, typename... I>
    using CHV3DMRPCMT = CHV3DMRPCM_base<D, I...>;
}

#endif
